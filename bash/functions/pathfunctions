# is $1 missing from $2 (or PATH) ?
not_in_path() {
	eval "case :\$${2-PATH}: in *:$1:*) return 1;; *) return 0;; esac"
}
# if $1 exists and is not in path, append it
app() {
  [ -d ${1:-.} ] && not_in_path $* && eval ${2:-PATH}="\$${2:-PATH}:$1"
}
# if $1 exists and is not in path, prepend it
pre() {
  [ -d ${1:-.} ] && not_in_path $* && eval ${2:-PATH}="$1:\$${2:-PATH}"
}
# if $1 is in path, remove it
del() {
  not_in_path $* || eval ${2:-PATH}=`eval echo :'$'${2:-PATH}: |
    sed -e "s;:$1:;:;g" -e "s;^:;;" -e "s;:\$;;"`
}
appf() {
  [ -n "$1" -a -n "$2" -a -r $1 ] && not_in_path $* && eval $2="\$$2:$1"
}
