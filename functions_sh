. ~/.sh/bash/functions/whence
. ~/.sh/bash/functions/pathfunctions

if [[ $TERM =~ xterm.* ]]; then
    [ -z "$HOST" ] && export HOST=$(hostname|cut -d. -f1|tr -s '[:upper:]' '[:lower:]')
    #eval `resize -u`
    function seticon() { echo -n "]1; $@ "; }
    function settitle() { echo -n "]2; $@ "; }
    function wd_update() { settitle $LOGNAME@$HOST: $PWD; seticon $HOST; }
    function cd()
    {
        if [ -n "$1" ]; then 
            builtin cd "$1" 
        else 
            builtin cd
        fi
        wd_update
    }
    function pushd() { builtin pushd "$1"; wd_update; }
    function popd() { builtin popd; wd_update; }
else
    unset settitle seticon wd_update cd pushd popd
fi

zless() { for f in $@; do zcat $f | less; done; }
mless() { groff -man -Tlatin1 $*|col|less; }
psg() { ps -eaf|grep $1; }

disp()
{
    if [ -z "$2" ]; then
        export DISPLAY=${1:-$HOST}:0
    else
        export DISPLAY=${1:-$HOST}:$2
    fi
}

cdp()
{
    if [ -n "$1" ]; then proj $1; fi   
    if [ -n "$PROJECT" ]; then
        cd $PROJECT
    else
        cd ~/proj
    fi
}

cds()
{
    if [ -n "$PROJECT" ]; then
        cd $PROJECT/src
    else
        cd ~/proj
    fi
}

r()
{
    if bundle 2>&1 >/dev/null; then
        bundle exec rake "$@"
    else
        rake "$@"
    fi
}

awsp()
{
    if [ -n "$1" ]; then 
        export AWS_DEFAULT_PROFILE=$1
    else
        echo "aws regions:"
        egrep '^\[profile ' ~/.aws/config | awk '{print $2}' | sed 's/\]//1'
    fi
}
